================
system.file.yml
----------------

allow_insecure_uploads: false
default_scheme: 'public'
path:
  private: ''
  temporary: ''
temporary_maximum_age: 21600


==================
system.schema.yml
------------------

system.file:
  type: mapping
  label: 'File system'
  mapping:
    allow_insecure_uploads:
      type: boolean
      label: 'Allow insecure uploads'
    default_scheme:
      type: string
      label: 'Default download method'
    path:
      type: mapping
      label: 'Path settings'
      mapping:
        private:
          type: string
          label: 'Private file system path'
        temporary:
          type: string
          label: ‘Temporary directory’
    temporary_maximum_age:
      type: integer
      label: ‘Maximum age for temporary files’


====================================
core.data_types.schema.yml (page 4)
------------------------------------

# Basic scalar data types from typed data.
boolean:
  label: 'Boolean'
  class: '\Drupal\Core\TypedData\Plugin\DataType\Boolean'
email:
  label: 'Email'
  class: '\Drupal\Core\TypedData\Plugin\DataType\Email'
integer:
  label: 'Integer'
  class: '\Drupal\Core\TypedData\Plugin\DataType\Integer'
float:
  label: 'Float'
  class: '\Drupal\Core\TypedData\Plugin\DataType\Float'
string:
  label: 'String'
  class: '\Drupal\Core\TypedData\Plugin\DataType\String'
uri:
  label: 'Uri'
  class: '\Drupal\Core\TypedData\Plugin\DataType\Uri'

# Basic data types for configuration.
undefined:
  label: 'Undefined'
  class: '\Drupal\Core\Config\Schema\Undefined'
mapping:
  label: Mapping
  class: '\Drupal\Core\Config\Schema\Mapping'
  definition_class: ‘\Drupal\Core\TypedData\MapDataDefinition’
sequence:
  label: Sequence
  class: '\Drupal\Core\Config\Schema\Sequence'
  definition_class: '\Drupal\Core\TypedData\ListDataDefinition'



=====================
custom code (page 5)
---------------------

mapping:
  subject:
    type: label
    label: 'Subject'
  body:
    type: text
    label: 'Body'

# Mail text with subject and body parts.
mail:
  type: mapping
  label: 'Mail'
  mapping:
    subject:
      type: label
      label: 'Subject'
    body:
      type: text
      label: 'Body'



=====================
custom code (page 6)
---------------------

name: thumbnail
label: 'Thumbnail (100x100)'
effects:
  1cfec298-8620-4749-b100-ccb6c4500779:
    id: image_scale
    data:
      width: 100
      height: 100
      upscale: true
    weight: 0
    uuid: 1cfec298-8620-4749-b100-ccb6c4500779
langcode: en

image.effect.image_crop:
  type: image_size
  label: 'Image crop'
  mapping:
    anchor:
      label: 'Anchor'


=====================
custom code (page 7)
---------------------

effects:
  type: sequence
  sequence:
    - type: mapping
      mapping:
        id:
          type: string
        data:
          type: image.effect.[%parent.id]
        weight:
          type: integer
        uuid:
          type: string



=====================
custom code (page 8)
---------------------

<?php
$definition = \Drupal::service(‘config.typed’)->getDefinition(‘system.maintenance’);
?>


=====================
custom code (page 9)
---------------------

<?php
$definition = array(
  ‘label’ => ‘Maintenance mode’,
  'type' => 'system.maintenance',
  ‘class’ => ‘\Drupal\Core\Config\Schema\Mapping',
  'definition_class' => '\Drupal\Core\TypedData\MapDataDefinition',
  ‘mapping’ => array(
    ‘message’ => array(
      ‘label’ => 'Message to display when in maintenance mode',
      ‘type’ => ‘text’,
    ),
    ‘langcode’ => array(
      ‘label’ => 'Default language',
      ‘type’ => ‘string’,
    ),
  ),
);
?>

<?php
// Get list of image style effects.
$effects = \Drupal::service(‘config.typed’)->get(‘image.style.thumbnail’)->get(‘effects’);
// Get the first effect.
$effect_first = reset($effects);
// Print type of property “width” (defaults to ‘integer’).
print $effect_first[‘data’][‘width’]->getType();
// Print value of property “width” (defaults to 100).
print $effect_first[‘data’][‘width’]->getValue();
?>


